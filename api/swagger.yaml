---
swagger: "2.0"
info:
  description: "This is Master Data Management API with Swagger documentation"
  version: "1.0"
  title: "Master Data Management"
  contact: {}
host: "localhost:8080"
basePath: "/v1"
paths:
  /countrymaster/api/addcountries:
    post:
      tags:
      - "Country Master"
      summary: "Add Countries"
      description: "Add a new Country"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AddCountry_Request"
        description: "Add New Country Request "
        required: true
        schema:
          $ref: "#/definitions/handler.AddCountry_Request"
        x-exportParamName: "AddCountryRequest"
      responses:
        "200":
          description: "Country successfully Added in the countrymaster list"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /countrymaster/countrycode/modifyCountries/{countrycode}:
    put:
      tags:
      - "Country Master"
      summary: "Modify Country by Country Code"
      description: "Modify a Country by Country Code"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "countrycode"
        in: "path"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "Countrycode"
      responses:
        "200":
          description: "Country is modified successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /countrymaster/getAllCountries/:
    get:
      tags:
      - "Country Master"
      summary: "Get All Countries"
      description: "Fetches all Countries"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "All Countries Names Fetched Successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /countrymaster/getAllCountries/{countrycode}:
    get:
      tags:
      - "Country Master"
      summary: "Get All Countries by Country Code"
      description: "Fetches a Country Details by Country Code"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "countrycode"
        in: "path"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "Countrycode"
      responses:
        "200":
          description: "All Account Codes are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /currencyexchange/add_currency_exchange_rate:
    post:
      tags:
      - "Currency Exchange Rate"
      summary: "Add Currency Exchange Rate"
      description: "Creates a new Currency Exchange Rate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CurrencyExchangeRate"
        description: "Currency Exchange Rate details"
        required: true
        schema:
          $ref: "#/definitions/handler.CreateCurrencyExchangeRate"
        x-exportParamName: "CurrencyExchangeRate"
      responses:
        "200":
          description: "New Currency Exchange Rate is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /currencyexchange/get_currency_exchange_rates:
    get:
      tags:
      - "Currency Exchange Rate"
      summary: "Get all Currency Exchange Rates"
      description: "Fetches all Currency Exchange Rates"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Currency Exchange Rates are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /currencyexchange/modify_currency_exchange_rate:
    put:
      tags:
      - "Currency Exchange Rate"
      summary: "Modify Currency Exchange Rate"
      description: "Modifies Currency Exchange Rate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CurrencyExchangeRate"
        description: "Modify Currency Exchange Rate request"
        required: true
        schema:
          $ref: "#/definitions/handler.ModifyCurrencyExchangeRate"
        x-exportParamName: "CurrencyExchangeRate"
      responses:
        "200":
          description: "Currency Exchange Rate is modified successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /currencyexchange/statustoggler:
    get:
      tags:
      - "Currency Exchange Rate"
      summary: "Currency Exchange Rate Status Toggler"
      description: "Toggles Currency Exchange Rate Status"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "currency_name"
        in: "query"
        description: "Currency Name"
        required: true
        type: "string"
        x-exportParamName: "CurrencyName"
      responses:
        "200":
          description: "Status of Currency Exchange Rates is modified successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/aps/dapltariff:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get DAPL Tariff"
      description: "Gives tariff for DAPL product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "INSC"
        in: "query"
        description: "InsC"
        required: false
        type: "string"
        x-exportParamName: "INSC"
        x-optionalDataType: "String"
      - name: "POD"
        in: "query"
        description: "Pod"
        required: false
        type: "string"
        x-exportParamName: "POD"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "SourcePincode"
        in: "query"
        description: "Source Pincode"
        required: true
        type: "string"
        x-exportParamName: "SourcePincode"
      - name: "DestinationPincode"
        in: "query"
        description: "Destination Pincode"
        required: true
        type: "string"
        x-exportParamName: "DestinationPincode"
      responses:
        "200":
          description: "DAPL Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/aps/sdstariff:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get SDS Tariff"
      description: "Gives tariff for APS SDS Product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "SDS Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/billmail:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Bill Mail Tariff"
      description: "Gives tariff for Bill Mail Service"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "number"
        x-exportParamName: "Weight"
      - name: "Quantity"
        in: "query"
        description: "Quantity"
        required: true
        type: "integer"
        x-exportParamName: "Quantity"
      responses:
        "200":
          description: "Bill Mail Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/blindliterature:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Blind Literature Tariff"
      description: "Gives tariff for Blind Literature"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REGBL"
        in: "query"
        description: "RegBl"
        required: false
        type: "string"
        x-exportParamName: "REGBL"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "ACKBL"
        in: "query"
        description: "AckBl"
        required: false
        type: "string"
        x-exportParamName: "ACKBL"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Blind Literature Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/bookpacket:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Book Packet Tariff"
      description: "Gives tariff for Book Packet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Book Packet Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/bpperiodical:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Book Packet containing Periodical Tariff"
      description: "Gives tariff for Book Packet containing Periodicals"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Value"
        in: "query"
        description: "Value"
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Book Packet containing Periodicals Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/businessparcel:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Business Parcel Tariff"
      description: "Gives tariff for Business Parcel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "INSC"
        in: "query"
        description: "InsC"
        required: false
        type: "string"
        x-exportParamName: "INSC"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "SourcePincode"
        in: "query"
        description: "Source Pincode"
        required: true
        type: "string"
        x-exportParamName: "SourcePincode"
      - name: "DestinationPincode"
        in: "query"
        description: "Destination Pincode"
        required: true
        type: "string"
        x-exportParamName: "DestinationPincode"
      responses:
        "200":
          description: "Business Parcel Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/directpost:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Direct Post Tariff"
      description: "Gives tariff for Direct Post"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "Quantity"
        in: "query"
        description: "Quantity"
        required: true
        type: "string"
        x-exportParamName: "Quantity"
      - name: "SourcePincode"
        in: "query"
        description: "Source Pincode"
        required: true
        type: "string"
        x-exportParamName: "SourcePincode"
      - name: "DestinationPincode"
        in: "query"
        description: "Destination Pincode"
        required: true
        type: "string"
        x-exportParamName: "DestinationPincode"
      responses:
        "200":
          description: "Direct Post Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/emo/:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Emo Tariff"
      description: "Gives tariff for Emo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "EMOAmount"
        in: "query"
        description: "EMOAmount"
        required: true
        type: "number"
        x-exportParamName: "EMOAmount"
      responses:
        "200":
          description: "Emo Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/ipo/:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get IPO Tariff"
      description: "Gives tariff for IPO"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "IPOAmount"
        in: "query"
        description: "IPO Amount"
        required: true
        type: "number"
        x-exportParamName: "IPOAmount"
      responses:
        "200":
          description: "IPO Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/letter:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Letter Tariff"
      description: "Gives tariff for Letter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Letter Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/lettercard:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Letter Card Tariff"
      description: "Gives tariff for Letter Card"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Letter Card Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/magazinepost:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Magazine Post Tariff"
      description: "Gives tariff for Magazine Post"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "SourcePincode"
        in: "query"
        description: "Source Pincode"
        required: true
        type: "string"
        x-exportParamName: "SourcePincode"
      - name: "DestinationPincode"
        in: "query"
        description: "Destination Pincode"
        required: true
        type: "string"
        x-exportParamName: "DestinationPincode"
      responses:
        "200":
          description: "Magazine Post Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/nationalbillmail:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get National Bill Mail Tariff"
      description: "Gives tariff for National Bill Mail Service"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "number"
        x-exportParamName: "Weight"
      - name: "Quantity"
        in: "query"
        description: "Quantity"
        required: true
        type: "integer"
        x-exportParamName: "Quantity"
      responses:
        "200":
          description: "National Bill Mail Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/newspaper:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Newspaper Tariff"
      description: "Gives tariff for Newspaper"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Newspaper Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/newspaperbundle:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Newspaper Bundle Tariff"
      description: "Gives tariff for Newspaper Bundle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Newspaper Bundle Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/nonvariantproducts/{ProductCode}:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Non Variant Tariff"
      description: "Gives tariff for Non Variant Products"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "path"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      responses:
        "200":
          description: "Non Variant Product Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/parcel:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Parcel Tariff"
      description: "Gives tariff for Parcel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Parcel Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/patternsamplepacket:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Pattern Sample Packet Tariff"
      description: "Gives tariff for Pattern Sample Packet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Pattern Sample Packet Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/postcard:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Post Card Tariff"
      description: "Gives tariff for Post Card"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Post Card Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/printedbook:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Printed Book Tariff"
      description: "Gives tariff for Printed Book"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "REGC"
        in: "query"
        description: "RegC"
        required: false
        type: "string"
        x-exportParamName: "REGC"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Printed Book Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/retailproducts/{ProductCode}:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Retail Post Tariff"
      description: "Gives tariff for Retail Post"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "path"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      responses:
        "200":
          description: "Retail Post Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /domesticproducts/tariff/speedpost:
    get:
      tags:
      - "Domestic Tariff"
      summary: "Get Domestic Speed Post Tariff"
      description: "Gives tariff for Domestic Speed Post"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "REG"
        in: "query"
        description: "Reg"
        required: false
        type: "string"
        x-exportParamName: "REG"
        x-optionalDataType: "String"
      - name: "INS"
        in: "query"
        description: "Ins"
        required: false
        type: "string"
        x-exportParamName: "INS"
        x-optionalDataType: "String"
      - name: "INSC"
        in: "query"
        description: "InsC"
        required: false
        type: "string"
        x-exportParamName: "INSC"
        x-optionalDataType: "String"
      - name: "POD"
        in: "query"
        description: "Pod"
        required: false
        type: "string"
        x-exportParamName: "POD"
        x-optionalDataType: "String"
      - name: "ACK"
        in: "query"
        description: "Ack"
        required: false
        type: "string"
        x-exportParamName: "ACK"
        x-optionalDataType: "String"
      - name: "VPP"
        in: "query"
        description: "Vpp"
        required: false
        type: "string"
        x-exportParamName: "VPP"
        x-optionalDataType: "String"
      - name: "AMS"
        in: "query"
        description: "Ams"
        required: false
        type: "string"
        x-exportParamName: "AMS"
        x-optionalDataType: "String"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "SourcePincode"
        in: "query"
        description: "Source Pincode"
        required: true
        type: "string"
        x-exportParamName: "SourcePincode"
      - name: "DestinationPincode"
        in: "query"
        description: "Destination Pincode"
        required: true
        type: "string"
        x-exportParamName: "DestinationPincode"
      responses:
        "200":
          description: "Domestic Speed Post Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /emos/{officeid}:
    put:
      tags:
      - "Office Master"
      summary: "Update Office details by Office ID"
      description: "Modify Office details by its Office ID"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "officeid"
        in: "path"
        description: "Office ID"
        required: true
        type: "integer"
        x-exportParamName: "Officeid"
      responses:
        "200":
          description: "Office details modified successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /establishmentmaster/:
    post:
      tags:
      - "Establishment"
      summary: "Create a new Establishment Register"
      description: "Create a new Establishment Register for Office By giving Required\
        \ Details ER_Name,Office_Name,Office_ID,OrderMemoNo,Remarks,Supporting_Doc_Path,Total_Sanctioned_Strength"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Request"
        description: "Establishment Register Input Field "
        required: true
        schema:
          $ref: "#/definitions/handler.CreateEstablishmentRegister_Request"
        x-exportParamName: "Request"
      responses:
        "200":
          description: "Establishment register is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /establishmentmaster/DisplayOfficeList:
    get:
      tags:
      - "Establishment"
      summary: "Get List Of Offices Within Establishment Register"
      description: "Fetches List Of Offices Within an Establishment Register"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "circle_name"
        in: "query"
        description: "Circle Name"
        required: false
        type: "string"
        x-exportParamName: "CircleName"
        x-optionalDataType: "String"
      - name: "region_name"
        in: "query"
        description: "Region Name"
        required: false
        type: "string"
        x-exportParamName: "RegionName"
        x-optionalDataType: "String"
      - name: "division_name"
        in: "query"
        description: "Division Name"
        required: false
        type: "string"
        x-exportParamName: "DivisionName"
        x-optionalDataType: "String"
      - name: "subdivision_name"
        in: "query"
        description: "Sub Division Name"
        required: false
        type: "string"
        x-exportParamName: "SubdivisionName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List of all offices fetched successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /establishmentmaster/OfficeID/:
    get:
      tags:
      - "Establishment"
      summary: "Get Establishment Register Details by Office ID"
      description: "Fetches Establishment Register Details by Office ID"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "office_id"
        in: "query"
        description: "Office ID"
        required: false
        type: "integer"
        x-exportParamName: "OfficeId"
        x-optionalDataType: "Int32"
      - name: "user_office_id"
        in: "query"
        description: "User Office ID"
        required: false
        type: "integer"
        x-exportParamName: "UserOfficeId"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Establishment register is fetched successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /establishmentmaster/OfficeName/{officename}:
    get:
      tags:
      - "Establishment"
      summary: "Get Establishment Register Details By Office Name"
      description: "Fetches Establishment Register Details by Office Name"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "officename"
        in: "path"
        description: "Office Name"
        required: true
        type: "string"
        x-exportParamName: "Officename"
      responses:
        "200":
          description: "Establishment register is fetched successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /establishmentmaster/RegisterID/{erid}:
    get:
      tags:
      - "Establishment"
      summary: "Get Establishment Register Details by ER ID"
      description: "Fetches Establishment Register details by giving ER ID"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "erid"
        in: "path"
        description: "ER ID"
        required: true
        type: "string"
        x-exportParamName: "Erid"
      responses:
        "200":
          description: "Establishment register is fetched successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /establishmentmaster/RegisterName/{ername}:
    get:
      tags:
      - "Establishment"
      summary: "Get Establishment Register Details By ER Name"
      description: "Fetches Establishment Register Details by giving Establishment\
        \ Register Name"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ername"
        in: "path"
        description: "ER Name"
        required: true
        type: "string"
        x-exportParamName: "Ername"
      responses:
        "200":
          description: "Establishment register is fetched successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /establishmentmaster/update/{erid}:
    put:
      tags:
      - "Establishment"
      summary: "Update an Establishment Register"
      description: "Updates an existing Establishment Register of an Office By giving\
        \ Required Details ER_Name,Office_Name,Office_ID,OrderMemoNo,Remarks,Supporting_Doc_Path,Total_Sanctioned_Strength"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "erid"
        in: "path"
        description: "ER ID"
        required: true
        type: "string"
        x-exportParamName: "Erid"
      responses:
        "200":
          description: "Establishment Register Updated Successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /establishmentmaster/verification:
    get:
      tags:
      - "Establishment"
      summary: "Get all new entries of Establishment Register pending for Verification"
      description: "Lists all new entries of Establishment Register that are Pending\
        \ for Verification by giving status"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status "
        required: true
        type: "string"
        x-exportParamName: "Status"
      responses:
        "200":
          description: "ALL Pending Establishment Register entries are retreived successfully\
            \ for Verification"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /establishmentmaster/verificationrecord:
    put:
      tags:
      - "Establishment"
      summary: "Verify a  New or Existing Establishment Register"
      description: "Verify a  New or Existing Establishment Register By Giving Erid\
        \ and status at query parameter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "erID"
        in: "query"
        description: "ER ID"
        required: true
        type: "string"
        x-exportParamName: "ErID"
      responses:
        "200":
          description: "Establishment Register Successfully Verified"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /foreignsalamsproductmaster/:
    post:
      tags:
      - "Foreign SAL/AMS Product"
      summary: "Create a new ForeignSalamsProduct"
      description: "To Create a new ForeignSalamsProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CreateInternationalProductCountryMapping_Request"
        description: "Input Field "
        required: true
        schema:
          $ref: "#/definitions/handler.CreateInternationalProductCountryMapping_Request"
        x-exportParamName: "CreateInternationalProductCountryMappingRequest"
      responses:
        "200":
          description: "Create ForeignSalamsProduct Successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /foreignsalamsproductmaster/foreignsalamsallproductcodedetails/{CountryCode}:
    get:
      tags:
      - "Foreign SAL/AMS Product"
      summary: "Get all ForeignSalamsProduct details with all Product as an array\
        \ within country"
      description: "Fetches all the details of all ForeignSalamsProducts as an array\
        \ within country by countrycode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "CountryCode"
        in: "path"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      responses:
        "200":
          description: "All Foreign SAL AMS Product details are fetched Successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /foreignsalamsproductmaster/foreignsalamsproductcodedetails/{CountryCode}/{ProductCode}:
    get:
      tags:
      - "Foreign SAL/AMS Product"
      summary: "Get ForeignSalamsProduct Code by Country Code"
      description: "Fetches the details of ForeignSalamsProducts with all mode of\
        \ transmission by Country Code and Product Code"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "CountryCode"
        in: "path"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "ProductCode"
        in: "path"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      responses:
        "200":
          description: "Foreign SAL AMS details fetched Successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /foreignsalamsproductmaster/foreignsalamsproductdetails/{countryproductmappingid}:
    get:
      tags:
      - "Foreign SAL/AMS Product"
      summary: "Get Foreign Salams Product"
      description: "Get Foreign SAL AMS Product details"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "countryproductmappingid"
        in: "path"
        description: "Country Product Mapping ID"
        required: true
        type: "integer"
        x-exportParamName: "Countryproductmappingid"
      responses:
        "200":
          description: "Foreign SAL AMS product details retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /foreignsalamsproductmaster/updateforeignsalamsprodcutdetails/{countryproductmappingid}:
    put:
      tags:
      - "Foreign SAL/AMS Product"
      summary: "Update a ForeignSalamsProduct"
      description: "Updates Foreign SAL AMS Product details"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "countryproductmappingid"
        in: "path"
        description: "Country Product Mapping ID"
        required: true
        type: "integer"
        x-exportParamName: "Countryproductmappingid"
      responses:
        "200":
          description: "Foreign SAL AMS Product details updated successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/approveGL:
    put:
      tags:
      - "Account Codes"
      summary: "Approve Account Codes"
      description: "Approve Account Code Details"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "VerifyAccountCode_Details"
        description: "Account Code Verification Request "
        required: true
        schema:
          $ref: "#/definitions/domain.VerifyAccountCode_Details"
        x-exportParamName: "VerifyAccountCodeDetails"
      responses:
        "200":
          description: "Account Code is approved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/createGLCode/:
    post:
      tags:
      - "Account Codes"
      summary: "Create Account Code"
      description: "Create a new Account Code"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CreateAccountCode_Details"
        description: "Account Code Creation Request "
        required: true
        schema:
          $ref: "#/definitions/domain.CreateAccountCode_Details"
        x-exportParamName: "CreateAccountCodeDetails"
      responses:
        "200":
          description: "Account Code is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/getActiveGLdetailsbyGLCode/{account_code}:
    get:
      tags:
      - "Account Codes"
      summary: "Get Active Account Code details by Account Code"
      description: "Fetch Active Account code details by Account code"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_code"
        in: "path"
        description: "Account Code"
        required: true
        type: "integer"
        x-exportParamName: "AccountCode"
      responses:
        "200":
          description: "Active Account Code details are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/getGLDetailsbyHOA/{hoa}:
    get:
      tags:
      - "Account Codes"
      summary: "Get Account Code details by HOA"
      description: "Fetch Account code details by HOA"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "hoa"
        in: "path"
        description: "HOA"
        required: true
        type: "string"
        x-exportParamName: "Hoa"
      responses:
        "200":
          description: "Account Code details are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/getGLdetailsbyGLCode/{account_code}:
    get:
      tags:
      - "Account Codes"
      summary: "Get Account Code details by Account Code"
      description: "Fetch Account code details by Account code"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "account_code"
        in: "path"
        description: "Account Code"
        required: true
        type: "integer"
        x-exportParamName: "AccountCode"
      responses:
        "200":
          description: "Account Code details are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/getHOADetails/{hoacode}:
    get:
      tags:
      - "Account Codes"
      summary: "Get HOA Details by HOA Code"
      description: "Gives Head of Account Details by HOA Code"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "hoacode"
        in: "path"
        description: "HOA Code"
        required: true
        type: "string"
        x-exportParamName: "Hoacode"
      responses:
        "200":
          description: "HOA Details are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/getallAccountCodes:
    get:
      tags:
      - "Account Codes"
      summary: "Get All Account Code Details"
      description: "Fetches all Account Codes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "All Account Codes are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/getallHOADetails:
    get:
      tags:
      - "Account Codes"
      summary: "Get All HOA Details"
      description: "Fetches all HOA Codes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "All HOA details are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/glverification:
    get:
      tags:
      - "Account Codes"
      summary: "Get Account Code Verify"
      description: "Fetch Account codes for verification"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "gl_status"
        in: "query"
        description: "GL Status"
        required: false
        type: "string"
        x-exportParamName: "GlStatus"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Account Code details are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/modifyGLActiveDeactive:
    put:
      tags:
      - "Account Codes"
      summary: "Modify an Account Code Activate/Deactivate"
      description: "Enable or Disable an Account Code"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ModifyAccountCode_ActiveDeactive"
        description: "Modify Account Code modify request "
        required: true
        schema:
          $ref: "#/definitions/domain.ModifyAccountCode_ActiveDeactive"
        x-exportParamName: "ModifyAccountCodeActiveDeactive"
      responses:
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/modifyGLchangeGLName/:
    put:
      tags:
      - "Account Codes"
      summary: "Modify Account code Change Account Code Name"
      description: "Modify Account code name using Account code"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ModifyAccountCode_Name"
        description: "Account Code HOA Modification Request"
        required: true
        schema:
          $ref: "#/definitions/domain.ModifyAccountCode_Name"
        x-exportParamName: "ModifyAccountCodeName"
      responses:
        "200":
          description: "Account Code's HOA is modified successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /gl/modifyGLchangeHOA/:
    put:
      tags:
      - "Account Codes"
      summary: "Modify Account code change HOA"
      description: "Modify Account code to change HOA"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ModifyAccountCode_HOA"
        description: "Account Code HOA Modification Request"
        required: true
        schema:
          $ref: "#/definitions/domain.ModifyAccountCode_HOA"
        x-exportParamName: "ModifyAccountCodeHOA"
      responses:
        "200":
          description: "Account Code's HOA is modified successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /insurancequotegeneration/pli:
    post:
      tags:
      - "PLI/RPLI"
      summary: "PLI Quote Generation"
      description: "Generates quote for six PLI policies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "PLIQuoteGenerationRequest"
        description: "PLI Quote Generation request particulars"
        required: true
        schema:
          $ref: "#/definitions/domain.PLIQuoteGenerationRequest"
        x-exportParamName: "PLIQuoteGenerationRequest"
      responses:
        "200":
          description: "PLI quote is generated successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /insurancequotegeneration/rpli:
    post:
      tags:
      - "PLI/RPLI"
      summary: "RPLI Quote Generation"
      description: "Generates quote for six RPLI policies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RPLIQuoteGenerationRequest"
        description: "RPLI Quote Generation request particulars"
        required: true
        schema:
          $ref: "#/definitions/domain.RPLIQuoteGenerationRequest"
        x-exportParamName: "RPLIQuoteGenerationRequest"
      responses:
        "200":
          description: "RPLI quote is generated successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /interestcalculation/posb:
    post:
      tags:
      - "CBS Interest"
      summary: "Calculate Interest"
      description: "Calculates CBS Interest charts for various Post Office Savings\
        \ Schemes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "CBS Interest calculation request"
        required: true
        schema:
          $ref: "#/definitions/domain.InterestCalculationRequest"
        x-exportParamName: "Request"
      responses:
        "200":
          description: "Interest Calculation is done successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /internationalproducts/tariff/blindliterature:
    get:
      tags:
      - "International Tariff"
      summary: "Get International Blind Literature Tariff"
      description: "Gives tariff for International Blind Literature Tariff"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "CountryCode"
        in: "query"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "ModeOfTransmission"
        in: "query"
        description: "Mode of Transmission"
        required: false
        type: "string"
        x-exportParamName: "ModeOfTransmission"
        x-optionalDataType: "String"
      - name: "vas_code"
        in: "query"
        description: "VAS Codes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-exportParamName: "VasCode"
      responses:
        "200":
          description: "International Blind Literature Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /internationalproducts/tariff/bulkbag:
    get:
      tags:
      - "International Tariff"
      summary: "Get International Bulk Bag Tariff"
      description: "Gives tariff for International Bulk Bag Tariff"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "CountryCode"
        in: "query"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "INS_AMOUNT"
        in: "query"
        description: "Ins Amount"
        required: false
        type: "string"
        x-exportParamName: "INSAMOUNT"
        x-optionalDataType: "String"
      - name: "ModeOfTransmission"
        in: "query"
        description: "Mode of Transmission"
        required: false
        type: "string"
        x-exportParamName: "ModeOfTransmission"
        x-optionalDataType: "String"
      - name: "vas_code"
        in: "query"
        description: "VAS Codes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-exportParamName: "VasCode"
      responses:
        "200":
          description: "International Bulk Bag Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /internationalproducts/tariff/ems:
    get:
      tags:
      - "International Tariff"
      summary: "Get International Speed Document Tariff"
      description: "Gives tariff for International Speed Document Tariff"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "CountryCode"
        in: "query"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "ModeOfTransmission"
        in: "query"
        description: "Mode of Transmission"
        required: false
        type: "string"
        x-exportParamName: "ModeOfTransmission"
        x-optionalDataType: "String"
      - name: "vas_code"
        in: "query"
        description: "VAS Codes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-exportParamName: "VasCode"
      responses:
        "200":
          description: "International Speed Document Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /internationalproducts/tariff/itps:
    get:
      tags:
      - "International Tariff"
      summary: "Get International Tracked Packets Tariff"
      description: "Gives tariff for International Tracked Packets Tariff"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "CountryCode"
        in: "query"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "ModeOfTransmission"
        in: "query"
        description: "Mode of Transmission"
        required: false
        type: "string"
        x-exportParamName: "ModeOfTransmission"
        x-optionalDataType: "String"
      - name: "vas_code"
        in: "query"
        description: "VAS Codes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-exportParamName: "VasCode"
      responses:
        "200":
          description: "International Tracked Packets Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /internationalproducts/tariff/letter:
    get:
      tags:
      - "International Tariff"
      summary: "Get International Letter Tariff"
      description: "Gives tariff for International Letter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "CountryCode"
        in: "query"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "ModeOfTransmission"
        in: "query"
        description: "Mode of Transmission"
        required: false
        type: "string"
        x-exportParamName: "ModeOfTransmission"
        x-optionalDataType: "String"
      - name: "vas_code"
        in: "query"
        description: "VAS Codes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-exportParamName: "VasCode"
      - name: "INS_AMOUNT"
        in: "query"
        description: "Ins Amount"
        required: false
        type: "string"
        x-exportParamName: "INSAMOUNT"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "International Letter Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /internationalproducts/tariff/parcel:
    get:
      tags:
      - "International Tariff"
      summary: "Get International Parcel Tariff"
      description: "Gives tariff for International Parcel Tariff"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "CountryCode"
        in: "query"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "ModeOfTransmission"
        in: "query"
        description: "Mode of Transmission"
        required: false
        type: "string"
        x-exportParamName: "ModeOfTransmission"
        x-optionalDataType: "String"
      - name: "vas_code"
        in: "query"
        description: "VAS Codes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-exportParamName: "VasCode"
      - name: "INS_AMOUNT"
        in: "query"
        description: "INS Amount"
        required: false
        type: "string"
        x-exportParamName: "INSAMOUNT"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "International Parcel Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /internationalproducts/tariff/printedpapers:
    get:
      tags:
      - "International Tariff"
      summary: "Get International Printed Papers Tariff"
      description: "Gives tariff for International Printed Papers Tariff"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "CountryCode"
        in: "query"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "Diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "INS_AMOUNT"
        in: "query"
        description: "INS Amount"
        required: false
        type: "string"
        x-exportParamName: "INSAMOUNT"
        x-optionalDataType: "String"
      - name: "ModeOfTransmission"
        in: "query"
        description: "Mode of Transmission"
        required: false
        type: "string"
        x-exportParamName: "ModeOfTransmission"
        x-optionalDataType: "String"
      - name: "vas_code"
        in: "query"
        description: "VAS Codes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-exportParamName: "VasCode"
      responses:
        "200":
          description: "International Printed Papers Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /internationalproducts/tariff/smallpackets:
    get:
      tags:
      - "International Tariff"
      summary: "Get International Small Packets Tariff"
      description: "Gives tariff for International Small Packets Tariff"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: true
        type: "string"
        x-exportParamName: "ProductCode"
      - name: "Weight"
        in: "query"
        description: "Weight"
        required: true
        type: "string"
        x-exportParamName: "Weight"
      - name: "CountryCode"
        in: "query"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "Length"
        in: "query"
        description: "Length"
        required: false
        type: "string"
        x-exportParamName: "Length"
        x-optionalDataType: "String"
      - name: "Width"
        in: "query"
        description: "Width"
        required: false
        type: "string"
        x-exportParamName: "Width"
        x-optionalDataType: "String"
      - name: "Height"
        in: "query"
        description: "Height"
        required: false
        type: "string"
        x-exportParamName: "Height"
        x-optionalDataType: "String"
      - name: "diameter"
        in: "query"
        description: "Diameter"
        required: false
        type: "string"
        x-exportParamName: "Diameter"
        x-optionalDataType: "String"
      - name: "INS_AMOUNT"
        in: "query"
        description: "INS Amount"
        required: false
        type: "string"
        x-exportParamName: "INSAMOUNT"
        x-optionalDataType: "String"
      - name: "ModeOfTransmission"
        in: "query"
        description: "Mode of Transmission"
        required: false
        type: "string"
        x-exportParamName: "ModeOfTransmission"
        x-optionalDataType: "String"
      - name: "vas_code"
        in: "query"
        description: "VAS Codes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-exportParamName: "VasCode"
      responses:
        "200":
          description: "International Small Packets Tariff is retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /localpinmaster/:
    post:
      tags:
      - "Pincode Master"
      summary: "Create Local Pin List in One Source Pin"
      description: "Creates a new Local Pincode under a Source Pincode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "LocalPin"
        description: "Local Pincode Details"
        required: true
        schema:
          $ref: "#/definitions/handler.LocalPin_Request"
        x-exportParamName: "LocalPin"
      responses:
        "200":
          description: "Local Pincode List is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /localpinmaster/modifylocalpincode/{sourcepincode}:
    put:
      tags:
      - "Pincode Master"
      summary: "Update Local Pin Details By Source Pincode"
      description: "Modifies Local Pincode details by Source Pincode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "sourcepincode"
        in: "path"
        description: "Source Pincode"
        required: true
        type: "number"
        x-exportParamName: "Sourcepincode"
      - in: "body"
        name: "requestBody"
        description: "Local Pin Request"
        required: false
        schema:
          $ref: "#/definitions/handler.LocalPin_Request"
        x-exportParamName: "RequestBody"
      responses:
        "200":
          description: "Local Pincode details updated successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /localpinmaster/searchlocalpincodelist:
    get:
      tags:
      - "Pincode Master"
      summary: "Search all local pincode list"
      description: "Searches all local pincode list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "sourcepincode"
        in: "query"
        description: "Source Pincode"
        required: true
        type: "number"
        x-exportParamName: "Sourcepincode"
      - name: "officeid"
        in: "query"
        description: "Office ID"
        required: true
        type: "integer"
        x-exportParamName: "Officeid"
      responses:
        "200":
          description: "Local Pincode is retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/:
    post:
      tags:
      - "Office Master"
      summary: "Create an Office"
      description: "Creates a new Office"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CreateOfficeDetails_Request"
        description: "New Office details"
        required: true
        schema:
          $ref: "#/definitions/domain.CreateOfficeDetails_Request"
        x-exportParamName: "CreateOfficeDetailsRequest"
      responses:
        "200":
          description: "New Office is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/allofficeshierarchy:
    get:
      tags:
      - "Office Master"
      summary: "Get All Office Hierarchy"
      description: "Gives All Offices in the Hierarchy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "circle_name"
        in: "query"
        description: "Circle Name"
        required: false
        type: "string"
        x-exportParamName: "CircleName"
        x-optionalDataType: "String"
      - name: "region_name"
        in: "query"
        description: "Region Name"
        required: false
        type: "string"
        x-exportParamName: "RegionName"
        x-optionalDataType: "String"
      - name: "division_name"
        in: "query"
        description: "Division Name"
        required: false
        type: "string"
        x-exportParamName: "DivisionName"
        x-optionalDataType: "String"
      - name: "sub_division_name"
        in: "query"
        description: "Sub Division Name"
        required: false
        type: "string"
        x-exportParamName: "SubDivisionName"
        x-optionalDataType: "String"
      - name: "office_type_code"
        in: "query"
        description: "Office Type Code"
        required: false
        type: "string"
        x-exportParamName: "OfficeTypeCode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "All Offices in the Hierarchy are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/allpaocode:
    get:
      tags:
      - "Office Master"
      summary: "Get PAO Codes"
      description: "Fetch all PAO Codes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "All PAO Codes are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/approveModifiedOffices:
    put:
      tags:
      - "Office Master"
      summary: "Approve modified offices"
      description: "Approves modified offices"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ApproveOfficeDetails"
        description: "Approve Office details"
        required: true
        schema:
          $ref: "#/definitions/domain.ApproveOfficeDetails"
        x-exportParamName: "ApproveOfficeDetails"
      responses:
        "200":
          description: "Office details Verifeid successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/circles:
    get:
      tags:
      - "Office Master"
      summary: "Get all Circles"
      description: "Gives list of all Circles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "List of Circles are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/circlesname:
    get:
      tags:
      - "Office Master"
      summary: "Get all Circle Names"
      description: "Lists all Circle Names"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "All Circle Names retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/createcircles:
    post:
      tags:
      - "Office Master"
      summary: "Create a Circle"
      description: "Creates a new Circle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "circle"
        description: "New Circle details"
        required: true
        schema:
          $ref: "#/definitions/domain.Circle"
        x-exportParamName: "Circle"
      responses:
        "200":
          description: "New Circle is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/createdivisions:
    post:
      tags:
      - "Office Master"
      summary: "Create a Division"
      description: "Creates a new Division"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Division"
        description: "New Division details"
        required: true
        schema:
          $ref: "#/definitions/domain.Division"
        x-exportParamName: "Division"
      responses:
        "200":
          description: "New Division is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/createregions:
    post:
      tags:
      - "Office Master"
      summary: "Create a Region"
      description: "Creates a new Region"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Region"
        description: "New Region details"
        required: true
        schema:
          $ref: "#/definitions/domain.Region"
        x-exportParamName: "Region"
      responses:
        "200":
          description: "New Region is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/createsubdivisions:
    post:
      tags:
      - "Office Master"
      summary: "Create a Sub Division"
      description: "Creates a new Sub Division"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SubDivision"
        description: "New Sub Division details"
        required: true
        schema:
          $ref: "#/definitions/domain.SubDivision"
        x-exportParamName: "SubDivision"
      responses:
        "200":
          description: "New Sub Division is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/ddodetails/{admin_office_id}:
    get:
      tags:
      - "Office Master"
      summary: "Get DDO Office Details"
      description: "Fetches all DDOs under an Admin Office"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "admin_office_id"
        in: "path"
        description: "Admin Office ID"
        required: true
        type: "integer"
        x-exportParamName: "AdminOfficeId"
      responses:
        "200":
          description: "All DDOs under an Admin Office are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/demographic:
    get:
      tags:
      - "Office Master"
      summary: "Get Demographic data"
      description: "Gives Demographic Details"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "state_name"
        in: "query"
        description: "State Name"
        required: false
        type: "string"
        x-exportParamName: "StateName"
        x-optionalDataType: "String"
      - name: "district_name"
        in: "query"
        description: "District Name"
        required: false
        type: "string"
        x-exportParamName: "DistrictName"
        x-optionalDataType: "String"
      - name: "taluk_name"
        in: "query"
        description: "Taluk Name"
        required: false
        type: "string"
        x-exportParamName: "TalukName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Demographic hierarchy retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/districtlist/{StateName}:
    get:
      tags:
      - "Office Master"
      summary: "Get all districts under a State"
      description: "Fetches all districts under a State"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "StateName"
        in: "path"
        description: "State Name"
        required: true
        type: "string"
        x-exportParamName: "StateName"
      responses:
        "200":
          description: "All Districts under a State retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/divisions/{regionname}:
    get:
      tags:
      - "Office Master"
      summary: "Get all Divisions by Region Name"
      description: "Gives list of Divisions by Region Name under a Region"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "regionname"
        in: "path"
        description: "Region Name"
        required: true
        type: "string"
        x-exportParamName: "Regionname"
      responses:
        "200":
          description: "List of all Divisions under a Region are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/divisions/byRegionID/{regionid}:
    get:
      tags:
      - "Office Master"
      summary: "Get all Divisions by Region ID"
      description: "Gives list of Divisions by Region ID under a Region"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "regionid"
        in: "path"
        description: "Region ID"
        required: true
        type: "integer"
        x-exportParamName: "Regionid"
      responses:
        "200":
          description: "List of all Divisions under a Region are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/divisionsname/{regionname}:
    get:
      tags:
      - "Office Master"
      summary: "Get all Division Names By Region Name"
      description: "Lists all Division Names under a Region by Region Name"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "regionname"
        in: "path"
        description: "Region Name"
        required: true
        type: "string"
        x-exportParamName: "Regionname"
      responses:
        "200":
          description: "All Division Names under a Region retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/fetchoffices:
    get:
      tags:
      - "Office Master"
      summary: "Fetch Offices"
      description: "Fetch Offices under an Office by Office Name"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "circle_name"
        in: "query"
        description: "Circle Name"
        required: false
        type: "string"
        x-exportParamName: "CircleName"
        x-optionalDataType: "String"
      - name: "region_name"
        in: "query"
        description: "Region Name"
        required: false
        type: "string"
        x-exportParamName: "RegionName"
        x-optionalDataType: "String"
      - name: "division_name"
        in: "query"
        description: "Division Name"
        required: false
        type: "string"
        x-exportParamName: "DivisionName"
        x-optionalDataType: "String"
      - name: "sub_division_name"
        in: "query"
        description: "Sub Division Name"
        required: false
        type: "string"
        x-exportParamName: "SubDivisionName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "All Offices under an Office are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/getoffices:
    get:
      tags:
      - "Office Master"
      summary: "Get Offices under an Office by Office ID"
      description: "Fetches all Offices under an Office searched by Office ID"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "circle_office_id"
        in: "query"
        description: "Circle Office ID"
        required: false
        type: "string"
        x-exportParamName: "CircleOfficeId"
        x-optionalDataType: "String"
      - name: "region_office_id"
        in: "query"
        description: "Region Office ID"
        required: false
        type: "string"
        x-exportParamName: "RegionOfficeId"
        x-optionalDataType: "String"
      - name: "division_office_id"
        in: "query"
        description: "Division Office ID"
        required: false
        type: "string"
        x-exportParamName: "DivisionOfficeId"
        x-optionalDataType: "String"
      - name: "sub_division_office_id"
        in: "query"
        description: "Sub Division Office ID"
        required: false
        type: "string"
        x-exportParamName: "SubDivisionOfficeId"
        x-optionalDataType: "String"
      - name: "ho_id"
        in: "query"
        description: "HO ID"
        required: false
        type: "string"
        x-exportParamName: "HoId"
        x-optionalDataType: "String"
      - name: "hro_id"
        in: "query"
        description: "HRO ID"
        required: false
        type: "string"
        x-exportParamName: "HroId"
        x-optionalDataType: "String"
      - name: "so_id"
        in: "query"
        description: "SO ID"
        required: false
        type: "string"
        x-exportParamName: "SoId"
        x-optionalDataType: "String"
      - name: "sro_id"
        in: "query"
        description: "SRO ID"
        required: false
        type: "string"
        x-exportParamName: "SroId"
        x-optionalDataType: "String"
      - name: "accounting_office_id"
        in: "query"
        description: "Accounting Office ID"
        required: false
        type: "string"
        x-exportParamName: "AccountingOfficeId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "All Offices under and Office are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/getofficetype/{officeid}:
    get:
      tags:
      - "Office Master"
      summary: "Get Office Type By Office ID"
      description: "Fetches Admin/Operative/RMS Office Type of an Office"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "officeid"
        in: "path"
        description: "Office ID"
        required: true
        type: "integer"
        x-exportParamName: "Officeid"
      responses:
        "200":
          description: "Office Type of an Office is retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/mergeoffices:
    put:
      tags:
      - "Office Master"
      summary: "Merge Offices"
      description: "Merges one office with other office"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "MergeOfficeRequest"
        description: "Merge Office details"
        required: true
        schema:
          $ref: "#/definitions/handler.MergeOfficeRequest"
        x-exportParamName: "MergeOfficeRequest"
      responses:
        "200":
          description: "Offices are merged successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/modifyOfficeActiveInactive:
    put:
      tags:
      - "Office Master"
      summary: "Active or Deactive Office"
      description: "Activates or Deactivates an Office"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ActiveDeactiveOfficeReq"
        description: "Office details"
        required: true
        schema:
          $ref: "#/definitions/domain.ActiveDeactiveOfficeReq"
        x-exportParamName: "ActiveDeactiveOfficeReq"
      responses:
        "200":
          description: "Office modified successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officedetails:
    get:
      tags:
      - "Office Master"
      summary: "Get Offices Details"
      description: "Gives complete details of an office"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "office_id"
        in: "query"
        description: "Office ID"
        required: false
        type: "integer"
        x-exportParamName: "OfficeId"
        x-optionalDataType: "Int32"
      - name: "office_name"
        in: "query"
        description: "Office Name"
        required: false
        type: "string"
        x-exportParamName: "OfficeName"
        x-optionalDataType: "String"
      - name: "pincode"
        in: "query"
        description: "Pincode"
        required: false
        type: "integer"
        x-exportParamName: "Pincode"
        x-optionalDataType: "Int32"
      - name: "delivery_flag"
        in: "query"
        description: "Delivery Flag"
        required: false
        type: "boolean"
        x-exportParamName: "DeliveryFlag"
        x-optionalDataType: "Bool"
      - name: "user_office_id"
        in: "query"
        description: "User Office ID"
        required: false
        type: "integer"
        x-exportParamName: "UserOfficeId"
        x-optionalDataType: "Int32"
      - name: "division_office_id"
        in: "query"
        description: "Division Office ID"
        required: false
        type: "integer"
        x-exportParamName: "DivisionOfficeId"
        x-optionalDataType: "Int32"
      - name: "accounting_office_id"
        in: "query"
        description: "Accounting Office ID"
        required: false
        type: "integer"
        x-exportParamName: "AccountingOfficeId"
        x-optionalDataType: "Int32"
      - name: "reporting_office_id"
        in: "query"
        description: "Reporting Office ID"
        required: false
        type: "integer"
        x-exportParamName: "ReportingOfficeId"
        x-optionalDataType: "Int32"
      - name: "admin_office_id"
        in: "query"
        description: "Admin Office ID"
        required: false
        type: "integer"
        x-exportParamName: "AdminOfficeId"
        x-optionalDataType: "Int32"
      - name: "latitude"
        in: "query"
        description: "Latitude"
        required: false
        type: "number"
        x-exportParamName: "Latitude"
        x-optionalDataType: "Float32"
      - name: "longitude"
        in: "query"
        description: "Longitude"
        required: false
        type: "number"
        x-exportParamName: "Longitude"
        x-optionalDataType: "Float32"
      - name: "ddo_office_id"
        in: "query"
        description: "DDO Office ID"
        required: false
        type: "integer"
        x-exportParamName: "DdoOfficeId"
        x-optionalDataType: "Int32"
      - name: "depot_office_id"
        in: "query"
        description: "Depot Office ID"
        required: false
        type: "integer"
        x-exportParamName: "DepotOfficeId"
        x-optionalDataType: "Int32"
      - name: "office_type"
        in: "query"
        description: "Office Type"
        required: false
        type: "string"
        x-exportParamName: "OfficeType"
        x-optionalDataType: "String"
      - name: "StateName"
        in: "query"
        description: "State Name"
        required: false
        type: "string"
        x-exportParamName: "StateName"
        x-optionalDataType: "String"
      - name: "DistrictName"
        in: "query"
        description: "District Name"
        required: false
        type: "string"
        x-exportParamName: "DistrictName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Complete details of an office are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officedetailsbystatus:
    get:
      tags:
      - "Office Master"
      summary: "Get Office Details by Office ID and its Status"
      description: "Gives details of an Office by Office ID and its Status"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "office_id"
        in: "query"
        description: "Office ID"
        required: false
        type: "string"
        x-exportParamName: "OfficeId"
        x-optionalDataType: "String"
      - name: "office_status"
        in: "query"
        description: "Office Status"
        required: false
        type: "string"
        x-exportParamName: "OfficeStatus"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Office Details are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officehierarchy:
    get:
      tags:
      - "Office Master"
      summary: "Get Office Hierarchy"
      description: "Gives Office Hierarchy details"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "circle_name"
        in: "query"
        description: "Circle Name"
        required: false
        type: "string"
        x-exportParamName: "CircleName"
        x-optionalDataType: "String"
      - name: "region_name"
        in: "query"
        description: "Region Name"
        required: false
        type: "string"
        x-exportParamName: "RegionName"
        x-optionalDataType: "String"
      - name: "division_name"
        in: "query"
        description: "Division Name"
        required: false
        type: "string"
        x-exportParamName: "DivisionName"
        x-optionalDataType: "String"
      - name: "sub_division_name"
        in: "query"
        description: "Sub Division Name"
        required: false
        type: "string"
        x-exportParamName: "SubDivisionName"
        x-optionalDataType: "String"
      - name: "ho_name"
        in: "query"
        description: "HO Name"
        required: false
        type: "string"
        x-exportParamName: "HoName"
        x-optionalDataType: "String"
      - name: "hro_name"
        in: "query"
        description: "HRO Name"
        required: false
        type: "string"
        x-exportParamName: "HroName"
        x-optionalDataType: "String"
      - name: "so_name"
        in: "query"
        description: "SO Name"
        required: false
        type: "string"
        x-exportParamName: "SoName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Office Hierarchy details are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officelistmdw/{officeid}:
    get:
      tags:
      - "Office Master"
      summary: "Get Offices for MDW"
      description: "Gives list of Offices for MDW purpose"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "officeid"
        in: "path"
        description: "Office ID"
        required: true
        type: "integer"
        x-exportParamName: "Officeid"
      responses:
        "200":
          description: "List of Offices for MDW are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officepartialdetail:
    get:
      tags:
      - "Office Master"
      summary: "Get Office Details by Depot Office ID"
      description: "Fetches all Offices under a Depot Office"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "office_id"
        in: "query"
        description: "Office ID"
        required: false
        type: "integer"
        x-exportParamName: "OfficeId"
        x-optionalDataType: "Int32"
      - name: "office_type"
        in: "query"
        description: "Office Type"
        required: false
        type: "string"
        x-exportParamName: "OfficeType"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Offices under a Depot Office are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officepartialdetails:
    get:
      tags:
      - "Office Master"
      summary: "Get Partial Office Details"
      description: "Fetches minimal office details based on input field"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "office_id"
        in: "query"
        description: "Office ID"
        required: false
        type: "integer"
        x-exportParamName: "OfficeId"
        x-optionalDataType: "Int32"
      - name: "office_name"
        in: "query"
        description: "Office Name"
        required: false
        type: "string"
        x-exportParamName: "OfficeName"
        x-optionalDataType: "String"
      - name: "pincode"
        in: "query"
        description: "Pincode"
        required: false
        type: "integer"
        x-exportParamName: "Pincode"
        x-optionalDataType: "Int32"
      - name: "delivery_flag"
        in: "query"
        description: "Delivery Flag"
        required: false
        type: "boolean"
        x-exportParamName: "DeliveryFlag"
        x-optionalDataType: "Bool"
      - name: "user_office_id"
        in: "query"
        description: "User Office ID"
        required: false
        type: "integer"
        x-exportParamName: "UserOfficeId"
        x-optionalDataType: "Int32"
      - name: "division_office_id"
        in: "query"
        description: "Division Office ID"
        required: false
        type: "integer"
        x-exportParamName: "DivisionOfficeId"
        x-optionalDataType: "Int32"
      - name: "accounting_office_id"
        in: "query"
        description: "Accounting Office ID"
        required: false
        type: "integer"
        x-exportParamName: "AccountingOfficeId"
        x-optionalDataType: "Int32"
      - name: "reporting_office_id"
        in: "query"
        description: "Reporting Office ID"
        required: false
        type: "integer"
        x-exportParamName: "ReportingOfficeId"
        x-optionalDataType: "Int32"
      - name: "admin_office_id"
        in: "query"
        description: "Admin Office ID"
        required: false
        type: "integer"
        x-exportParamName: "AdminOfficeId"
        x-optionalDataType: "Int32"
      - name: "latitude"
        in: "query"
        description: "Latitude"
        required: false
        type: "number"
        x-exportParamName: "Latitude"
        x-optionalDataType: "Float32"
      - name: "longitude"
        in: "query"
        description: "Longitude"
        required: false
        type: "number"
        x-exportParamName: "Longitude"
        x-optionalDataType: "Float32"
      - name: "ddo_office_id"
        in: "query"
        description: "DDO Office ID"
        required: false
        type: "integer"
        x-exportParamName: "DdoOfficeId"
        x-optionalDataType: "Int32"
      - name: "depot_office_id"
        in: "query"
        description: "Depot Office ID"
        required: false
        type: "integer"
        x-exportParamName: "DepotOfficeId"
        x-optionalDataType: "Int32"
      - name: "office_type"
        in: "query"
        description: "Office Type"
        required: false
        type: "string"
        x-exportParamName: "OfficeType"
        x-optionalDataType: "String"
      - name: "StateName"
        in: "query"
        description: "State Name"
        required: false
        type: "string"
        x-exportParamName: "StateName"
        x-optionalDataType: "String"
      - name: "DistrictName"
        in: "query"
        description: "District Name"
        required: false
        type: "string"
        x-exportParamName: "DistrictName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Minimal Office details are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officestatus:
    get:
      tags:
      - "Office Master"
      summary: "Get all Office Status types"
      description: "Gives list of Office Statuses"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Office Status types are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officeswithpartname/{officename}:
    get:
      tags:
      - "Office Master"
      summary: "Get all Offices with Partial Name"
      description: "Fetches all Offices with inputted partial name"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "officename"
        in: "path"
        description: "Office Name"
        required: true
        type: "string"
        x-exportParamName: "Officename"
      responses:
        "200":
          description: "All Offices with partial name retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officeswithpartpincode/{pincode}:
    get:
      tags:
      - "Office Master"
      summary: "Get only Operational Offices by Partial Pincode"
      description: "Fetch all Operational Office Details with three to six digits\
        \ of Pincode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pincode"
        in: "path"
        description: "Pincode"
        required: true
        type: "string"
        x-exportParamName: "Pincode"
      responses:
        "200":
          description: "All Offices with Partial Pincode are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officeswithpartpincode/rms/{pincode}:
    get:
      tags:
      - "Office Master"
      summary: "Get all types of Offices with Partial Pincode"
      description: "Fetches all types of Offices with three to six digits of Pincode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pincode"
        in: "path"
        description: "Pincode"
        required: true
        type: "string"
        x-exportParamName: "Pincode"
      responses:
        "200":
          description: "All Offices with partial pincode are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officetypes:
    get:
      tags:
      - "Office Master"
      summary: "Get Office Types"
      description: "Gives list of Office Types"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "office_type_code"
        in: "query"
        description: "Office Type Code"
        required: false
        type: "string"
        x-exportParamName: "OfficeTypeCode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List of Office Types are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/officevalidationwithpincode:
    get:
      tags:
      - "Office Master"
      summary: "Office ID Validation with pincode"
      description: "Validates an Office ID with pincode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "office_id"
        in: "query"
        description: "Office ID"
        required: false
        type: "integer"
        x-exportParamName: "OfficeId"
        x-optionalDataType: "Int32"
      - name: "office_name"
        in: "query"
        description: "Office Name"
        required: false
        type: "string"
        x-exportParamName: "OfficeName"
        x-optionalDataType: "String"
      - name: "pincode"
        in: "query"
        description: "Pincode"
        required: false
        type: "integer"
        x-exportParamName: "Pincode"
        x-optionalDataType: "Int32"
      - name: "delivery_flag"
        in: "query"
        description: "Delivery Flag"
        required: false
        type: "boolean"
        x-exportParamName: "DeliveryFlag"
        x-optionalDataType: "Bool"
      - name: "user_office_id"
        in: "query"
        description: "User Office ID"
        required: false
        type: "integer"
        x-exportParamName: "UserOfficeId"
        x-optionalDataType: "Int32"
      - name: "division_office_id"
        in: "query"
        description: "Division Office ID"
        required: false
        type: "integer"
        x-exportParamName: "DivisionOfficeId"
        x-optionalDataType: "Int32"
      - name: "accounting_office_id"
        in: "query"
        description: "Accounting Office ID"
        required: false
        type: "integer"
        x-exportParamName: "AccountingOfficeId"
        x-optionalDataType: "Int32"
      - name: "reporting_office_id"
        in: "query"
        description: "Reporting Office ID"
        required: false
        type: "integer"
        x-exportParamName: "ReportingOfficeId"
        x-optionalDataType: "Int32"
      - name: "admin_office_id"
        in: "query"
        description: "Admin Office ID"
        required: false
        type: "integer"
        x-exportParamName: "AdminOfficeId"
        x-optionalDataType: "Int32"
      - name: "latitude"
        in: "query"
        description: "Latitude"
        required: false
        type: "number"
        x-exportParamName: "Latitude"
        x-optionalDataType: "Float32"
      - name: "longitude"
        in: "query"
        description: "Longitude"
        required: false
        type: "number"
        x-exportParamName: "Longitude"
        x-optionalDataType: "Float32"
      - name: "ddo_office_id"
        in: "query"
        description: "DDO Office ID"
        required: false
        type: "integer"
        x-exportParamName: "DdoOfficeId"
        x-optionalDataType: "Int32"
      - name: "depot_office_id"
        in: "query"
        description: "Depot Office ID"
        required: false
        type: "integer"
        x-exportParamName: "DepotOfficeId"
        x-optionalDataType: "Int32"
      - name: "office_type"
        in: "query"
        description: "Office Type"
        required: false
        type: "string"
        x-exportParamName: "OfficeType"
        x-optionalDataType: "String"
      - name: "StateName"
        in: "query"
        description: "State Name"
        required: false
        type: "string"
        x-exportParamName: "StateName"
        x-optionalDataType: "String"
      - name: "DistrictName"
        in: "query"
        description: "District Name"
        required: false
        type: "string"
        x-exportParamName: "DistrictName"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Office ID is validates successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/regions/{circlename}:
    get:
      tags:
      - "Office Master"
      summary: "Get all regions by Circle Name"
      description: "Gives list of regions by circle name"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "circlename"
        in: "path"
        description: "Circle Name"
        required: true
        type: "string"
        x-exportParamName: "Circlename"
      responses:
        "200":
          description: "List of all regions under a Circle are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/regions/byCircleID/{circleid}:
    get:
      tags:
      - "Office Master"
      summary: "Get all regions by Circle ID"
      description: "Gives list of regions by circle id"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "circleid"
        in: "path"
        description: "Circle ID"
        required: true
        type: "integer"
        x-exportParamName: "Circleid"
      responses:
        "200":
          description: "List of all regions under a Circle are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/regionsname/{circlename}:
    get:
      tags:
      - "Office Master"
      summary: "Get all Region Names By Circle Name"
      description: "Lists all Region Names under a Circle by Circle Name"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "circlename"
        in: "path"
        description: "Circle Name"
        required: true
        type: "string"
        x-exportParamName: "Circlename"
      responses:
        "200":
          description: "All Region Names under a Circle retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/statelist:
    get:
      tags:
      - "Office Master"
      summary: "Get all State List"
      description: "Fetches all State Names"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "List of all States retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/subdivisions/{divisionname}:
    get:
      tags:
      - "Office Master"
      summary: "Get all Sub Divisions by Division Name"
      description: "Gives list of Sub Divisions by Division Name under a Division"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "divisionname"
        in: "path"
        description: "Division name"
        required: true
        type: "string"
        x-exportParamName: "Divisionname"
      responses:
        "200":
          description: "List of all Sub Divisions under a Division are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/subdivisions/byDivisionID/{divisionid}:
    get:
      tags:
      - "Office Master"
      summary: "Get all Sub Divisions by Division ID"
      description: "Gives list of Sub Divisions by Division ID under a Division"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "divisionid"
        in: "path"
        description: "Division ID"
        required: true
        type: "integer"
        x-exportParamName: "Divisionid"
      responses:
        "200":
          description: "List of all Sub Divisions under a Division are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/subdivisionsname/{divisionname}:
    get:
      tags:
      - "Office Master"
      summary: "Get all Sub Division Names By Division Name"
      description: "Lists all Sub Division Names under a Division by Division Name"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "divisionname"
        in: "path"
        description: "Division Name"
        required: true
        type: "string"
        x-exportParamName: "Divisionname"
      responses:
        "200":
          description: "All Sub Division Names under a Division retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/verification:
    get:
      tags:
      - "Office Master"
      summary: "Get all Offices for Verification"
      description: "Gives list of new/modified offices for verification"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "admin_office_id"
        in: "query"
        description: "Admin Office ID"
        required: false
        type: "integer"
        x-exportParamName: "AdminOfficeId"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List of new/modified offices are retrieved"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /offices/workinghours:
    get:
      tags:
      - "Office Master"
      summary: "Get All Working Hours"
      description: "Gives all working hours"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "All Working Hours retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /officetypemaster/:
    post:
      tags:
      - "Office Master"
      summary: "Create Office Type"
      description: "Creates a new Office Type"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "OfficeTypeMaster"
        description: "Office Type Details"
        required: true
        schema:
          $ref: "#/definitions/domain.OfficeTypeMaster"
        x-exportParamName: "OfficeTypeMaster"
      responses:
        "200":
          description: "Office Type is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /officetypemaster/modifyofficetypedetail/{officetypeid}:
    put:
      tags:
      - "Office Master"
      summary: "Modify Office Type by Office Type ID"
      description: "Updates Office Type by Office Type ID"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "officetypeid"
        in: "path"
        description: "Office Type ID"
        required: true
        type: "integer"
        x-exportParamName: "Officetypeid"
      responses:
        "200":
          description: "Office Type Details updated successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /officetypemaster/officetypedetail/{officetypecode}:
    get:
      tags:
      - "Office Master"
      summary: "Get Office Type by Office Type Code"
      description: "Get Office Type by Office Type Code"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "officetypecode"
        in: "path"
        description: "Office Type Code"
        required: true
        type: "string"
        x-exportParamName: "Officetypecode"
      responses:
        "200":
          description: "Office Type Code is fetched successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /product/checkproductavailabilityinanoffice:
    get:
      tags:
      - "Product Master"
      summary: "Get Product availability in an Office"
      description: "Get Product availability in an Office"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductID"
        in: "query"
        description: "Product ID"
        required: false
        type: "integer"
        x-exportParamName: "ProductID"
        x-optionalDataType: "Int32"
      - name: "OfficeID"
        in: "query"
        description: "Office ID"
        required: false
        type: "integer"
        x-exportParamName: "OfficeID"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Product availability is retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /product/createproduct:
    post:
      tags:
      - "Product Master"
      summary: "Create a Product"
      description: "Creates a new Product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ProductMaster"
        description: "New Product details"
        required: true
        schema:
          $ref: "#/definitions/domain.ProductMaster"
        x-exportParamName: "ProductMaster"
      responses:
        "200":
          description: "New Product is created successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /product/mapofficesandprodcuts:
    post:
      tags:
      - "Product Master"
      summary: "Create a Product and Office mapping"
      description: "Creates a Product and Office mapping"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Offices"
        description: "Office and Product details"
        required: true
        schema:
          $ref: "#/definitions/handler.Offices"
        x-exportParamName: "Offices"
      responses:
        "200":
          description: "Office and Product mapped successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /product/productdetails:
    get:
      tags:
      - "Product Master"
      summary: "Get Product Details"
      description: "Get Product Details"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductID"
        in: "query"
        description: "Product ID"
        required: false
        type: "integer"
        x-exportParamName: "ProductID"
        x-optionalDataType: "Int32"
      - name: "ProductCode"
        in: "query"
        description: "Product Code"
        required: false
        type: "string"
        x-exportParamName: "ProductCode"
        x-optionalDataType: "String"
      - name: "ProductName"
        in: "query"
        description: "Product Name"
        required: false
        type: "string"
        x-exportParamName: "ProductName"
        x-optionalDataType: "String"
      - name: "ProductTypeCode"
        in: "query"
        description: "Product Type Code"
        required: false
        type: "string"
        x-exportParamName: "ProductTypeCode"
        x-optionalDataType: "String"
      - name: "ModifiedFlag"
        in: "query"
        description: "Modified Flag"
        required: false
        type: "boolean"
        x-exportParamName: "ModifiedFlag"
        x-optionalDataType: "Bool"
      - name: "StampFlag"
        in: "query"
        description: "Stamp Flag"
        required: false
        type: "boolean"
        x-exportParamName: "StampFlag"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Product Details are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /product/producttype:
    get:
      tags:
      - "Product Master"
      summary: "Get Product Types"
      description: "Get Product Types"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ProductTypeCode"
        in: "query"
        description: "Product Type Code"
        required: false
        type: "string"
        x-exportParamName: "ProductTypeCode"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Product Types are retrieved successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
  /product/updateproduct/productid/{productid}:
    put:
      tags:
      - "Product Master"
      summary: "Update Product Details"
      description: "Update Product Details"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productid"
        in: "path"
        description: "Product ID"
        required: true
        type: "integer"
        x-exportParamName: "Productid"
      - in: "body"
        name: "product_master"
        description: "Product Details"
        required: false
        schema:
          type: "object"
        x-exportParamName: "ProductMaster"
        x-optionalDataType: "Interface{}"
      responses:
        "200":
          description: "Product Details updated successfully"
          schema:
            $ref: "#/definitions/handler.Response"
        "400":
          description: "Validation error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "401":
          description: "Unauthorized error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "403":
          description: "Forbidden error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "404":
          description: "Data not found error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "409":
          description: "Data conflict error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/handler.errorValidResponse"
definitions:
  domain.ActiveDeactiveOfficeReq:
    type: "object"
    properties:
      modified_by:
        type: "string"
      officeid:
        type: "integer"
      officestatus:
        type: "string"
      order_number:
        type: "string"
      remarks:
        type: "string"
      supported_doc_path:
        type: "string"
  domain.ApproveOfficeDetails:
    type: "object"
    properties:
      approved_by:
        type: "string"
      office_id:
        type: "integer"
      office_status:
        type: "string"
      remarks:
        type: "string"
      source_office_id:
        type: "integer"
  domain.Circle:
    type: "object"
  domain.CreateAccountCode_Details:
    type: "object"
    properties:
      created_by:
        type: "string"
      gl_code:
        type: "integer"
      gl_id:
        type: "integer"
      gl_name:
        type: "string"
      hoa:
        type: "string"
      hoa_name:
        type: "string"
      order_number:
        type: "string"
      payment_flag:
        type: "boolean"
      product_code:
        type: "string"
      product_id:
        type: "integer"
      receipt_flag:
        type: "boolean"
      remarks:
        type: "string"
      supported_doc_path:
        type: "string"
  domain.CreateOfficeDetails_Request:
    type: "object"
    properties:
      accounting_office_id:
        type: "integer"
      admin_flag:
        type: "boolean"
      admin_office_id:
        type: "integer"
      approval_status:
        type: "string"
      approved_by:
        type: "string"
      atm_id:
        type: "string"
      boid:
        type: "integer"
      boname:
        type: "string"
      circleCode:
        type: "string"
      circleName:
        type: "string"
      circleOfficeID:
        type: "integer"
      city_name:
        type: "string"
      closed_date:
        type: "string"
      contact_number:
        type: "string"
      created_by:
        type: "string"
      csi_facility_id:
        type: "string"
      dac:
        type: "string"
      ddo_code:
        type: "string"
      deleted_flag:
        type: "boolean"
      delivery_office_flag:
        type: "boolean"
        description: "UpdatedAt           time.Time `json:\"updated_at\"`"
      divisionName:
        type: "string"
      divisionOfficeID:
        type: "integer"
      email_id:
        type: "string"
      gstn_code:
        type: "string"
      hoid:
        type: "integer"
      honame:
        type: "string"
      hroid:
        type: "integer"
      hroname:
        type: "string"
      landmark:
        type: "string"
      latitude:
        type: "number"
      longitude:
        type: "number"
      modified_flag:
        type: "boolean"
        description: "ApprovedAt          time.Time `json:\"approved_at\"`"
      office_address1:
        type: "string"
      office_address2:
        type: "string"
      office_address3:
        type: "string"
      office_class:
        type: "string"
      office_id:
        type: "integer"
      office_level:
        type: "string"
      office_name:
        type: "string"
      office_status:
        type: "string"
      office_status_id:
        type: "integer"
      office_street:
        type: "string"
      office_type_code:
        type: "string"
      office_type_id:
        type: "integer"
      order_memo_number:
        type: "string"
      pao_code:
        type: "string"
      pincode:
        type: "integer"
      pli_id:
        type: "string"
      qr_terminal_id:
        type: "string"
      regionName:
        type: "string"
      regionOfficeID:
        type: "integer"
      remarks:
        type: "string"
      reporting_office_id:
        type: "integer"
      soid:
        type: "integer"
      sol_id:
        type: "string"
      soname:
        type: "string"
      sroid:
        type: "integer"
      sroname:
        type: "string"
      state_name:
        type: "string"
      subdivisionName:
        type: "string"
      subdivisionOfficeID:
        type: "integer"
      supported_document_path:
        type: "string"
      taluk_name:
        type: "string"
      updated_by:
        type: "string"
        description: "CreatedAt           time.Time `json:\"created_at\"`"
      valid_from:
        type: "string"
      valid_to:
        type: "string"
      village_name:
        type: "string"
      weg_code:
        type: "string"
      working_days:
        type: "string"
      working_hours_from:
        type: "string"
      working_hours_to:
        type: "string"
  domain.Division:
    type: "object"
    properties:
      circle_id:
        type: "integer"
      division_id:
        type: "integer"
      division_name:
        type: "string"
      region_id:
        type: "integer"
  domain.InterestCalculationRequest:
    type: "object"
    required:
    - "amount"
    - "product_code"
    properties:
      account_type:
        type: "string"
      amount:
        type: "number"
      cb_nsckvptype:
        type: "string"
      cb_tdtype:
        type: "integer"
      girl_age:
        type: "integer"
      product_code:
        type: "string"
  domain.LocalPin_Detail:
    type: "object"
    properties:
      local_flag:
        type: "string"
      local_pincode:
        type: "integer"
      source_pincode:
        type: "integer"
  domain.ModifyAccountCode_ActiveDeactive:
    type: "object"
    properties:
      gl_code:
        type: "integer"
      gl_status:
        type: "string"
      modified_by:
        type: "string"
      order_number:
        type: "string"
      remarks:
        type: "string"
      supported_doc_path:
        type: "string"
  domain.ModifyAccountCode_HOA:
    type: "object"
    properties:
      gl_code:
        type: "integer"
      hoa:
        type: "string"
      modified_by:
        type: "string"
  domain.ModifyAccountCode_Name:
    type: "object"
    properties:
      gl_code:
        type: "integer"
      gl_name:
        type: "string"
      hoa:
        type: "string"
      modified_by:
        type: "string"
      order_number:
        type: "string"
      payment_flag:
        type: "boolean"
      receipt_flag:
        type: "boolean"
      remarks:
        type: "string"
      supported_doc_path:
        type: "string"
  domain.OfficeTypeMaster:
    type: "object"
    properties:
      admin_flag:
        type: "boolean"
      child_office_type_code:
        type: "string"
      office_type_code:
        type: "string"
      office_type_id:
        type: "integer"
      office_type_name:
        type: "string"
      parent_office_type_code:
        type: "string"
  domain.PLIQuoteGenerationRequest:
    type: "object"
    required:
    - "age_on_next_birthday"
    - "is_new_policy"
    - "periodicity"
    - "sum_assured"
    properties:
      age_on_next_birthday:
        type: "number"
      child_age:
        type: "number"
      is_new_policy:
        type: "integer"
      periodicity:
        type: "integer"
        description: "Monthly-1 Quarterly-2 HalfYearly-3 Yearly-4"
      spouse_age:
        type: "number"
      sum_assured:
        type: "number"
      sum_assured_child_policy:
        type: "number"
  domain.ProductMaster:
    type: "object"
    properties:
      ack:
        type: "boolean"
      air_mail_surcharge_indicator:
        type: "boolean"
      approved_by:
        type: "string"
      approved_date:
        type: "string"
      cash_on_delivery_indicator:
        type: "boolean"
      cgst_percentage:
        type: "number"
      colour:
        type: "string"
      created_by:
        type: "string"
      created_date:
        type: "string"
      delivery_advice_required:
        type: "boolean"
      delivery_to_addresse_in_person_required:
        type: "boolean"
      denomination:
        type: "integer"
      denomination_type:
        type: "string"
      dimension_in_non_roll:
        type: "integer"
      door_delivery_charges:
        type: "boolean"
      e_iod:
        type: "boolean"
      e_value_payable_post:
        type: "boolean"
      enable_to_portal_flag:
        type: "boolean"
      fac:
        type: "boolean"
      gl_code:
        type: "string"
      igst_percentage:
        type: "number"
      insertion:
        type: "boolean"
      insurance:
        type: "boolean"
      is_deleted_flag:
        type: "boolean"
      is_modified_flag:
        type: "boolean"
      is_stamp_flag:
        type: "boolean"
      length_of_roll_form_in_cms:
        type: "integer"
      length_plus_2_times_diameter_in_roll:
        type: "integer"
      ltf:
        type: "boolean"
      max_breadth_of_non_roll_form_in_cms:
        type: "integer"
      max_height_of_non_roll_form_in_cms:
        type: "integer"
      max_length_of_non_roll_form_in_cms:
        type: "integer"
      max_quantity:
        type: "integer"
      max_weight_in_gms:
        type: "integer"
      min_breadth_in_non_roll:
        type: "integer"
      min_height_in_non_roll:
        type: "integer"
      min_length_in_non_roll:
        type: "integer"
      min_length_in_roll:
        type: "integer"
      min_quantity:
        type: "integer"
      min_weight_in_gms:
        type: "integer"
      pan_india_accessibility_flag:
        type: "boolean"
      philatelic_bureau_quantity:
        type: "integer"
      premium_flag:
        type: "boolean"
      price:
        type: "number"
      product_code:
        type: "string"
      product_group:
        type: "string"
      product_id:
        type: "integer"
      product_master_status:
        type: "string"
      product_name:
        type: "string"
      product_subgroup:
        type: "string"
      product_type_code:
        type: "string"
      product_type_id:
        type: "integer"
      proof_of_delivery:
        type: "boolean"
      proponents_quantity:
        type: "integer"
      quantity:
        type: "integer"
      reg:
        type: "boolean"
      servicable_product_flag:
        type: "string"
      service_tax_percentage:
        type: "number"
      sgst_percentage:
        type: "number"
      sms:
        type: "boolean"
      stamp_category:
        type: "string"
      stamp_category_discription:
        type: "string"
      surface_air_lifted_indicator:
        type: "boolean"
      unit_of_measure:
        type: "string"
      updated_by:
        type: "string"
      updated_date:
        type: "string"
      valid_from:
        type: "string"
      valid_to:
        type: "string"
      value_payable_post_indicator:
        type: "boolean"
      variant:
        type: "string"
  domain.RPLIQuoteGenerationRequest:
    type: "object"
    required:
    - "age_on_next_birthday"
    - "is_new_policy"
    - "is_non_std_age"
    - "periodicity"
    - "sum_assured"
    properties:
      age_on_next_birthday:
        type: "number"
      child_age:
        type: "number"
      is_new_policy:
        type: "integer"
      is_non_std_age:
        type: "integer"
        description: "Standard-1 Non-Standard-2"
      periodicity:
        type: "integer"
        description: "Monthly-1 Quarterly-2 HalfYearly-3 Yearly-4"
      sum_assured:
        type: "number"
      sum_assured_child_policy:
        type: "number"
  domain.Region:
    type: "object"
    properties:
      circle_id:
        type: "integer"
      region_id:
        type: "integer"
      region_name:
        type: "string"
  domain.SubDivision:
    type: "object"
    properties:
      circle_id:
        type: "integer"
      division_id:
        type: "integer"
      region_id:
        type: "integer"
      sub_division_id:
        type: "integer"
      sub_division_name:
        type: "string"
  domain.VerifyAccountCode_Details:
    type: "object"
    properties:
      approved_by:
        type: "string"
      gl_code:
        type: "integer"
      gl_status:
        type: "string"
  handler.AddCountry_Request:
    type: "object"
    required:
    - "ContinentCd"
    - "ContinentName"
    - "CountryISDCode"
    - "added_by"
    - "air_mail_surcharge_indicator_flag"
    - "country_code"
    - "country_name"
    - "sal_applicable_charge"
    - "status"
    - "surface_air_lifted_indicator"
    properties:
      ContinentCd:
        type: "string"
      ContinentName:
        type: "string"
      CountryISDCode:
        type: "string"
      added_by:
        type: "string"
      air_mail_surcharge_indicator_flag:
        type: "boolean"
      ams_applicable_charge:
        type: "integer"
      country_code:
        type: "string"
      country_name:
        type: "string"
      sal_applicable_charge:
        type: "number"
      status:
        type: "string"
      surface_air_lifted_indicator:
        type: "boolean"
  handler.CreateCurrencyExchangeRate:
    type: "object"
    required:
    - "created_by"
    - "currency_code"
    - "currency_name"
    - "rate_of_exchange_for_export_goods"
    - "rate_of_exchange_for_imported_goods"
    - "schedule_name"
    - "with_effect_from"
    properties:
      created_by:
        type: "string"
      currency_code:
        type: "string"
      currency_name:
        type: "string"
      rate_of_exchange_for_export_goods:
        type: "number"
      rate_of_exchange_for_imported_goods:
        type: "number"
      schedule_name:
        type: "string"
      with_effect_from:
        type: "string"
  handler.CreateEstablishmentRegister_Request:
    type: "object"
    required:
    - "office_id"
    - "office_name"
    - "ordermemo_no"
    - "support_doc_path"
    - "total_sanctioned_strength"
    properties:
      er_name:
        type: "string"
      office_id:
        type: "integer"
      office_name:
        type: "string"
      office_type_name:
        type: "string"
        description: "OfficeTypeCode          string `json:\"office_type_code\" validate:\"\
          required\"`"
      ordermemo_no:
        type: "string"
      remarks:
        type: "string"
      support_doc_path:
        type: "string"
      total_sanctioned_strength:
        type: "integer"
  handler.CreateInternationalProductCountryMapping_Request:
    type: "object"
    properties:
      country_code:
        type: "string"
      dimension_length_breadth_height:
        type: "number"
      ins_higher_limit:
        type: "number"
      ins_lower_limit:
        type: "number"
      length_of_roll_form_in_cms:
        type: "number"
      length_plus_2_times_diameter_in_roll:
        type: "number"
      max_breadth_of_non_roll_form_in_cms:
        type: "number"
      max_height_of_non_roll_form_in_cms:
        type: "number"
      max_length_of_non_roll_form_in_cms:
        type: "number"
      max_weight_gms:
        type: "number"
      min_weight_gms:
        type: "number"
      minimum_breath_in_non_roll:
        type: "number"
      minimum_height_in_non_roll:
        type: "number"
      minimum_length_in_non_roll:
        type: "number"
      minimum_length_in_roll:
        type: "number"
      mode_of_transmission:
        type: "string"
      product_code:
        type: "string"
      status:
        type: "string"
  handler.LocalPin_Request:
    type: "object"
    properties:
      local_pin:
        type: "array"
        items:
          $ref: "#/definitions/domain.LocalPin_Detail"
  handler.MergeOfficeRequest:
    type: "object"
    properties:
      source_office_details:
        $ref: "handler.MergeOfficeRequest_source_office_details"
      target_office_details:
        $ref: "handler.MergeOfficeRequest_source_office_details"
  handler.ModifyCurrencyExchangeRate:
    type: "object"
    required:
    - "currency_code"
    - "currency_name"
    - "rate_of_exchange_for_export_goods"
    - "rate_of_exchange_for_imported_goods"
    - "updated_by"
    - "with_effect_from"
    properties:
      currency_code:
        type: "string"
      currency_name:
        type: "string"
      rate_of_exchange_for_export_goods:
        type: "number"
      rate_of_exchange_for_imported_goods:
        type: "number"
      updated_by:
        type: "string"
      with_effect_from:
        type: "string"
  handler.Offices:
    type: "object"
    properties:
      office_id:
        type: "integer"
      office_type_code:
        type: "string"
      product_id:
        type: "integer"
  handler.Response:
    type: "object"
    properties:
      data: {}
      message:
        type: "string"
        example: "Success"
      success:
        type: "boolean"
        example: true
    example:
      data: ""
      success: true
      message: "Success"
  handler.errorValidResponse:
    type: "object"
    properties:
      errorno:
        type: "array"
        items:
          type: "string"
      message:
        type: "array"
        example:
        - "Error message"
        items:
          type: "string"
      success:
        type: "boolean"
        example: false
  handler.MergeOfficeRequest_source_office_details:
    type: "object"
    properties:
      admin_flag:
        type: "boolean"
      delivery_office_flag:
        type: "boolean"
      modified_by:
        type: "string"
      office_id:
        type: "integer"
      office_status:
        type: "string"
      order_memo_number:
        type: "string"
      remarks:
        type: "string"
      supported_document_path:
        type: "string"
      valid_to:
        type: "string"
        description: "Change the type if necessary"
